plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'

    // Jib
//    id 'com.google.cloud.tools.jib' version '3.4.4'
}

group = 'com.sell_buy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootRun {
    jvmArgs = ["-XX:ReservedCodeCacheSize=256m"]
}

ext {
    set('springCloudVersion', "2024.0.0")
    set('springCloudAwsVersion', "3.3.0-RC1")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repo.maven.apache.org/m" }
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-taglibs'
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test'


    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:${springCloudAwsVersion}")
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-sqs'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.webjars.bower:jquery:3.7.1'
    implementation 'org.webjars:webjars-locator-core:0.59'
    implementation 'org.webjars:bootstrap:5.3.3'
    implementation 'org.webjars:jquery-validation:1.20.0'
    implementation 'org.webjars:jquery-ui:1.14.1'
// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'


    compileOnly group: 'jakarta.servlet.jsp', name: 'jakarta.servlet.jsp-api', version: '4.0.0'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
    implementation 'jakarta.el:jakarta.el-api:6.0.1'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.1'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.33'
}


tasks.named('test') {
    useJUnitPlatform()
}

/*
jib {
    from {
        image = 'openjdk:17-oracle'
    }
    to {
        image = '985539778210.dkr.ecr.ap-northeast-1.amazonaws.com/globalin'
        tags = ['latest']
        credHelper = 'ecr-login'
    }

    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-Dfile.encoding=UTF-8', '-Dserver.port=80', '-Dspring.profiles.active=prod', '-XX:+UseContainerSupport']
        ports = ['80']
    }
}*/
